
JAVA와 JAVAScript는 다르다.
자바 스크립트로 할 수 있는 것들
	1. 웹 클라이언트( 서비스를 제공 받는 ) [ HTML, CCSS ]
	----------- 2009년 이후 node.js 나오면서 아래의 기능이 가능해짐 -----------
	2. 웹 서버 [ node.js ] vs JAVA
	3. 모바일 [ react native ]
	4. 데스크톱 어플리케이션 [ NW.js ] vs JAVA(spring)
	5. 데이터베이스 관리 [ NOSQL ] vs SQL

- 텍스트 에디터
	프론트엔드 	: VScode, 아톰(회사 자유) 등등
	백엔드 		: 이클립스(무료), 인텔리제이(유료) 등등
-브라우저[ 클라이언트 입장 ]
	크롬, 엣지, 사파리 등등 : 웹 브라우저

- 기본용어
	부호		: ( 모스부호 [ 짧은신호 또는 긴신호 ] -> 전기상태 [ 0 or 1 ] )
	코드 		: 정보를 다른 형태로 변환하는 규칙[ 문법 / 도구 ]
			[ java[ 규칙 ], html[ 규칙<> ], css[ 규칙 식별자{} ], js, python ]
	표현식 		: 하나이상의 값/정보로 표현될 수 있는 코드
	문장 		: 표현식 한개이상 모인것 ( 명령문 )
	프로그램		: 문장이 모인 것 ( 명령문의 집합 )
	프로세스		: 현재 실행중인 프로그램 ( 스레드/스케줄링 )
	응용 프로그램	: 사용자가 사용할 수 있도록 만든 프로그램( = 애플리케이션 )
	웹 어플리케이션	: 웹에서 사용하는 프로그램

*응용 프로그램, 프로그램, 어플리케이션은 비슷한 개념

			        				        > 웹 애플리케이션( 프로세스 )
	부호 > 코드 > 표현식 > 문장 > 프로그램       사용처에 따라      > 앱 애플리케이션( 프로세스 )
							        > 데스크탑 애플리케이션( 프로세스 )

	개발자/사람			컴퓨터
	<div> ------------ 명령어 ------------> [ 번역 ] 010101011001

	박스모델 <-------- 실행결과 ---------

	console.log('안녕') ----------명령어 ------->[번역] 010111000
	
	안녕 <----------- 실행결과 -------

- 키워드 : 언어들이 미리 만든( 기능이 들어간 ) 단어들.
  !! : 키워드와 동일하게 이름을 정의하지 말자! [ 중복되니까 ]

- 식별자 : 어떤 변수/함수/명령어 등을 식별하기 위한 이름
	HTML/CSS : id, class, <마크업>
	JS : 변수/함수/클래스 등등
	1. 키워드 사용불가  2. 숫자 시작불가  3. 특수문자는 _ , $ 만 가능  4. 공백 불가능
	2. 영어 권장(카멜표기법), 의미있는 이름

- 주석 : 코드설명
	HTML	: <!--주석-->
	CSS 	: /* 주석 */
	JS 	: 
		1. 한줄주석 : // 한줄주석
		2. 여러줄 주석 : /* 여러줄 주석 */

- 부호 종류
	1. 모스부호
		- 정의 : 한 종류의 신호발생장치로 짧은 신호(·, 점 또는 단점)와 긴 신호(-, 선 또는 장점)를 적절히 조합하여 문자 기호를 표기하는 방식
			자주 쓰인 문자일수록 신호가 간단하다
		- 사용되는 곳 : 주로 비상상황일때 사용 ex) SOS
	2. 이진코드
		- 정의 : 이진 코드 또는 바이너리 코드 라고 불리우며, 이진 숫자 체계의 0과 1을 의미한다.
		- 형태/모양 코드 예(대표적으로 2~3개) : 십진수 -> 이진수=> 9=1001(2), 10=1010(2) 
									: 각각의 자리는 2^n ...  2^3  2^2  2^1  2^0 을 의미한다.
		- 사용되는 곳 : 컴퓨팅과 전기통신에서 문자열과 같은 다양한 방식의 인코딩 데이터에 사용된다.
	3. 아스키코드
		- 정의 :  아스키 코드는 1963년 미국 ANSI에서 표준화한 정보교환용 7비트 부호체계이다.
			영문 키보드로 입력할 수 있는 모든 기호들이 할당되어 있는 가장 기본적인 부호 체계이다. 
			매우 단순하고 간단하기 때문에 어느 시스템에서도 적용가능하다는 장점이 있다.
		- 형태/모양 코드 예 : int main () { printf("숫자 : %d \n', 65);  return 0; }
		- 사용되는 곳 : 인쇄전신기(Teleprinter)를 통한 전신(통신)에서 사용되기 시작했고, 8비트 컴퓨터에서도 활용되어 오늘날 문자 인코딩의 근간을 이루게 된다.
	4.유니코드
		-정의 : 전 세계의 모든 문자를 컴퓨터에서 일관되게 표현하고 다룰 수 있도록 설계된 산업 표준 (16비트 문자)
		-사용되는곳 : XML, HTML, python, java, 최신 운영 체제 등
	    

1. 입출력 방법 [ **2, 6 ]
	1. alert("출력하고 싶은 말")				: 경고창(확인버튼) 출력 함수
	2. console.log("출력하고 싶은 말")			: console(f12 개발자 도구) 출력 함수
	3. confirm("출락하고 싶은말")				: 확인창(확인=true/취소=false)버튼 출력 함수
	4. prompt("출력하고 싶은 말")			: 입력상자(ionput, 확인=true/취소=false) 입력 함수	**test 할때만 씀
	5. document.write("HTML에 출력하고 싶은 말")		: HTML에 출력함수
	6. document.마크업식별.html="HTML에 출력하고 싶은 말"	: HTML에 특정 요소/마크업 출력

2. 기본 자료형  
	- 자료 : 프로그램이 처리할 수 있는 모든것
	- 자료형 : 자료 형태/모양/폼 나눠 놓은것
		1. 숫자(number) 2. 문자열 3. 불(boolean)
			[ 숫자 ]
			1. 숫자와 문자열 구분
				273 vs"279" 다르다.

			[ 문자열 ]
			1. 문자열 표현방법 : '문자열' 또는"문자열"
				**주의 : - '문자열" 불가능(따옴표 종류두가지 혼용 불가 하지만, 아래와 같은 경우는 가능)
			           		-  "  '  '  " : 가능
			          		-  '  "  "  ' : 가능 

			2. 이스케이프/ 제어 문자
				1. \n : 줄바꿈
				2. \t : 들여쓰기
				3. \\ : 백슬래쉬 출력
				그 외 \" , \' : 연산자 출력 시
			3. 문자열 연산자
				+ : 문자열 연결 연산자[ "문자열" + "문자열" ]
				[ 인덱스 ] : 문자열에서 인덱스 번째 문자 추출
					-인덱스 : 저장된 순서번호=인덱스0번* 시작
					'안 녕 하 세 요'
					[0][1][2][3][4]
				문자열.lenght : 문자열 내 문자 개수
					'안녕하세요'.length : 해당 문자열 내 문자 개수 =>5

3. 연산자 [ 연산/계산/논리 시 사용되는 특수문자 ]
	1. 산술연산자 : 결과값 출력
		+ 더하기 - 빼기  * 곱하기  / 나누기  % 나머지
	2. 연결 연산자 : + 연결 연산자
		숫자+숫자  [ 더하기 ]
		숫자 + '문자열' [ 연결 ]
		'문자열 + '문자열' [연결 ]

	3. 비교 연산자 : 비교 후 true/참 혹은 false/거짓 반환
		> 초과/크다			< 미만/작다
		>= 이상/크거나 같다		<= 이하/작거나 같다
		== 같다[ 데이터 비교 ]		===같다[ 데이터/ 자료형 비교 ](숫자인지, 문자인지**강력 비교, js에만 있음)
		!=같지않다	!==같지않다

	4. 관계 연산자 : 주로 비교연산자를 2개 이상 사용 후 true/참 혹은 false/거짓 반환
		&& 이면서 면서 이고 모두 그리고 and조건	[ 모두 참이면 참 ]
		||    이거나 거나 또는 하나라도 or조건		[ 하나라도 참이면 참 ]
		!     반대 부정 not조건			[ 참 < -> 거짓 ]

	5. 증감 연산자 : 1 증가 혹은 1 감소
		++ 1증가	   [ ++변수 : 선위증가, 변수++ : 후위증가 ]
		--   1감소   [ --변수 : 선위감소, 변수-- : 후위감소 ]

	6. 대입연산자 : 오른쪽 데이터를 왼쪽에 넣어주기 / 대입
		=대입 [ 변수 = 10; 	10이라는 데이터를 변수에 넣어주기/대입/저장 ]
		=+    [ 오른쪽 데이터를 왼쪽값과 더한 후에 왼쪽에 대입 ]
		-=, *+, /=, %=
   

   1207
   - HTML에서 JAVAScropt를 적용하는 방법
	1. <script>
	2. <head> 또는 <body>가장 하단에 <script> 마크업에 .js파일 불러오기

	[불]
	1. true 혹은 false

	- 몫 구하기
		parseInt( 실수 ) : 정수로 변환해주는 함수(소수점 제거)

	7. 삼항 연산자 : 
		조건 ? 참 : 거짓
			- 조건 : 비교/관계 연산자
			- 참 : true 대신 하고싶은 코드
			- 거짓 : false 대신 하고싶은 코드

	- 연산관련 함수들
			1. parseInt() : 정수로 변환
			2. typeof() : 자료형 검색
			3. Number() : 숫자형으로 자료형 변환
	
	*** 탬플릿 문자열 ****중요!***
		`백틱을 이용한 문자열과 데이터 표현
		1. 전체를 '백틱으로 감싼다.
		2. 데이터를 표현 할 위치에 ${데이터}

	- 상수와 변수
		상수와 변수를 쓰는 이유 : 데이터를 저장하는 1개

		메모리 : 주기억장치[ram 메모리 : 현재 실행중 메모리], 보조기억장치[ssd.hdd c: : 영구저장용 메모리]
			- 컴퓨터가 데이터를 저장하는 공간 [ 100101010 ]

		- 개발자가 직접적으로 하드웨어 메모리에 저장할 수 없음 [ 소프트웨어는 사용권한이 없다. ]

		JS, JAVA, PYTHON, C언어 등 프로그래밍 코드 언어들은 개발자를 위해 하드웨어 값[ 데이터 ]을 저장할 수 있도록
			- html, css 없음

		===> 상수와 변수를 사용하는 이유 : 자료를 저장하기위해 , 반복 사용하기 위해

			상수/변수 : 1개의 자료 [숫자, 문자열, 불 ]을 저장/ 가지고 있는 상자
			|		|			RAM(주기억장치)
			|  안녕	|	------->  "안녕" ------> 유니코드 0101100011
			|_______|
			

		상수 : 항상 같은 수
			- 한번 값을 넣으면 수정 할 수 없다.
			- const : 상수를 선언하는 의미를 담고있는 키워드

		변수 : 변할 수 있는 수
			- 값을 계속 변경 할 수 있다.
			- var 또는 let : 변수 선언하는 의미 담고있는 키워드

	자료형 
		4. undefined
